input {
 udp {
  port => $LogPort1
  type => "nap_waf_udp"
 }
 tcp {
  port => $LogPort1
  type => "nap_waf_tcp"
 }
}

filter {
 if [type] == "nap_waf_udp" {
  grok {
   match => { "message" => "\<%{INT:syslog_code}\>%{TIMESTAMP_ISO8601:remote_time_stamp} %{HOSTNAME:remote_hostname} %{WORD:remote_function}:%{GREEDYDATA:syslog_content}" }
  }
  kv {
   source => "syslog_content"
   field_split_pattern => "\",(?<!\"\",)"
   value_split_pattern => "=\""
  }
  kv {
   source => "request"
   field_split_pattern => "\\r\\n"
   value_split_pattern => ": "
   prefix => "request_"
  }
  useragent {
   source => "request_User-Agent"
   prefix => "req_ua_"
  }
  mutate {
   gsub => [
    "json_log", "\"\"", '"'
   ]
  }
 } else if [type] == "nap_waf_tcp" {
  grok {
   match => { "message" => "\<%{INT:syslog_code}\>%{TIMESTAMP_ISO8601:remote_time_stamp} %{HOSTNAME:remote_hostname} %{WORD:remote_function}:%{GREEDYDATA:syslog_content}" }
  }
  kv {
   source => "syslog_content"
   field_split_pattern => "\",(?<!\"\",)"
   value_split_pattern => "=\""
  }
  kv {
   source => "request"
   field_split_pattern => "\\r\\n"
   value_split_pattern => ": "
   prefix => "request_"
  }
  useragent {
   source => "request_User-Agent"
   prefix => "req_ua_"
  }
  mutate {
   gsub => [
    "json_log", "\"\"", '"'
   ]
  }
 }
}

output {
 if [type] == "nap_waf_udp" {
  elasticsearch {
   hosts => [ "localhost:9200" ]
   index => "nap_waf_udp-%{+YYYY.MM.dd}"
  }
 } else if [type] == "nap_waf_tcp" {
  elasticsearch {
   hosts => [ "localhost:9200" ]
   index => "nap_waf_tcp-%{+YYYY.MM.dd}"
  }
 }
}